/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.analysis;

import java.util.*;
import minipython.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable in;
    private Hashtable out;

    public Object getIn(Node node)
    {
        if(in == null)
        {
            return null;
        }

        return in.get(node);
    }

    public void setIn(Node node, Object in)
    {
        if(this.in == null)
        {
            this.in = new Hashtable(1);
        }

        if(in != null)
        {
            this.in.put(node, in);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(out == null)
        {
            return null;
        }

        return out.get(node);
    }

    public void setOut(Node node, Object out)
    {
        if(this.out == null)
        {
            this.out = new Hashtable(1);
        }

        if(out != null)
        {
            this.out.put(node, out);
        }
        else
        {
            this.out.remove(node);
        }
    }
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseACommandsProgramme(ACommandsProgramme node)
    {
        defaultCase(node);
    }

    public void caseAFunctionCommands(AFunctionCommands node)
    {
        defaultCase(node);
    }

    public void caseAStatementCommands(AStatementCommands node)
    {
        defaultCase(node);
    }

    public void caseAArgArgument(AArgArgument node)
    {
        defaultCase(node);
    }

    public void caseAEqValueTemp2(AEqValueTemp2 node)
    {
        defaultCase(node);
    }

    public void caseACommaIdTemp2Temp3(ACommaIdTemp2Temp3 node)
    {
        defaultCase(node);
    }

    public void caseAIfStatement(AIfStatement node)
    {
        defaultCase(node);
    }

    public void caseAAssigneqStatement(AAssigneqStatement node)
    {
        defaultCase(node);
    }

    public void caseAAssigmpeqStatement(AAssigmpeqStatement node)
    {
        defaultCase(node);
    }

    public void caseAPrintStatement(APrintStatement node)
    {
        defaultCase(node);
    }

    public void caseAWhileStatement(AWhileStatement node)
    {
        defaultCase(node);
    }

    public void caseAForStatementStatement(AForStatementStatement node)
    {
        defaultCase(node);
    }

    public void caseAReturnStatement(AReturnStatement node)
    {
        defaultCase(node);
    }

    public void caseAFuncallStatementStatement(AFuncallStatementStatement node)
    {
        defaultCase(node);
    }

    public void caseAListStatement(AListStatement node)
    {
        defaultCase(node);
    }

    public void caseAFuncallFuncall(AFuncallFuncall node)
    {
        defaultCase(node);
    }

    public void caseACallfuncalltagCallfuncall(ACallfuncalltagCallfuncall node)
    {
        defaultCase(node);
    }

    public void caseAArglistArglist(AArglistArglist node)
    {
        defaultCase(node);
    }

    public void caseAFuncalltFuncallt(AFuncalltFuncallt node)
    {
        defaultCase(node);
    }

    public void caseACommaExpressionTemp4(ACommaExpressionTemp4 node)
    {
        defaultCase(node);
    }

    public void caseATrueMorecomparison(ATrueMorecomparison node)
    {
        defaultCase(node);
    }

    public void caseAFalseMorecomparison(AFalseMorecomparison node)
    {
        defaultCase(node);
    }

    public void caseAEqqormeqMorecomparison(AEqqormeqMorecomparison node)
    {
        defaultCase(node);
    }

    public void caseAComparisonexMorecomparison(AComparisonexMorecomparison node)
    {
        defaultCase(node);
    }

    public void caseAIdcompMorecomparison(AIdcompMorecomparison node)
    {
        defaultCase(node);
    }

    public void caseAListExpression(AListExpression node)
    {
        defaultCase(node);
    }

    public void caseAArrayExpression(AArrayExpression node)
    {
        defaultCase(node);
    }

    public void caseAAdditionExpression(AAdditionExpression node)
    {
        defaultCase(node);
    }

    public void caseASubstractionExpression(ASubstractionExpression node)
    {
        defaultCase(node);
    }

    public void caseAMultiplicationExpression(AMultiplicationExpression node)
    {
        defaultCase(node);
    }

    public void caseADivisionExpression(ADivisionExpression node)
    {
        defaultCase(node);
    }

    public void caseAValueExpression(AValueExpression node)
    {
        defaultCase(node);
    }

    public void caseAXppExpression(AXppExpression node)
    {
        defaultCase(node);
    }

    public void caseAPpxExpression(APpxExpression node)
    {
        defaultCase(node);
    }

    public void caseAListpostPrefixExpression(AListpostPrefixExpression node)
    {
        defaultCase(node);
    }

    public void caseAIdentifierExpression(AIdentifierExpression node)
    {
        defaultCase(node);
    }

    public void caseACallfuncallExpression(ACallfuncallExpression node)
    {
        defaultCase(node);
    }

    public void caseAFuncallExpExpression(AFuncallExpExpression node)
    {
        defaultCase(node);
    }

    public void caseAStrValue(AStrValue node)
    {
        defaultCase(node);
    }

    public void caseANumbValue(ANumbValue node)
    {
        defaultCase(node);
    }

    public void caseACommaValueTemp5(ACommaValueTemp5 node)
    {
        defaultCase(node);
    }

    public void caseAIdIdentifier(AIdIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTTab(TTab node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTPp(TPp node)
    {
        defaultCase(node);
    }

    public void caseTEqq(TEqq node)
    {
        defaultCase(node);
    }

    public void caseTMinuseq(TMinuseq node)
    {
        defaultCase(node);
    }

    public void caseTPluseq(TPluseq node)
    {
        defaultCase(node);
    }

    public void caseTDeq(TDeq node)
    {
        defaultCase(node);
    }

    public void caseTIn(TIn node)
    {
        defaultCase(node);
    }

    public void caseTRange(TRange node)
    {
        defaultCase(node);
    }

    public void caseTNeqq(TNeqq node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTDmult(TDmult node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    public void caseTExclam(TExclam node)
    {
        defaultCase(node);
    }

    public void caseTDictt(TDictt node)
    {
        defaultCase(node);
    }

    public void caseTDef(TDef node)
    {
        defaultCase(node);
    }

    public void caseTLogicPlus(TLogicPlus node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBr(TLBr node)
    {
        defaultCase(node);
    }

    public void caseTRBr(TRBr node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTQmark(TQmark node)
    {
        defaultCase(node);
    }

    public void caseTGqmark(TGqmark node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTElif(TElif node)
    {
        defaultCase(node);
    }

    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    public void caseTPrint(TPrint node)
    {
        defaultCase(node);
    }

    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    public void caseTFor(TFor node)
    {
        defaultCase(node);
    }

    public void caseTLess(TLess node)
    {
        defaultCase(node);
    }

    public void caseTGreat(TGreat node)
    {
        defaultCase(node);
    }

    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    public void caseTQuote(TQuote node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTLineComment(TLineComment node)
    {
        defaultCase(node);
    }

    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(Node node)
    {
    }
}
