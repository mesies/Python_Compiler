/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class ACallfuncallExpression extends PExpression
{
    private PFuncall _funcall_;

    public ACallfuncallExpression()
    {
    }

    public ACallfuncallExpression(
        PFuncall _funcall_)
    {
        setFuncall(_funcall_);

    }
    public Object clone()
    {
        return new ACallfuncallExpression(
            (PFuncall) cloneNode(_funcall_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACallfuncallExpression(this);
    }

    public PFuncall getFuncall()
    {
        return _funcall_;
    }

    public void setFuncall(PFuncall node)
    {
        if(_funcall_ != null)
        {
            _funcall_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _funcall_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_funcall_);
    }

    void removeChild(Node child)
    {
        if(_funcall_ == child)
        {
            _funcall_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_funcall_ == oldChild)
        {
            setFuncall((PFuncall) newChild);
            return;
        }

    }
}
