/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AFuncallStatementStatement extends PStatement
{
    private PCallfuncall _callfuncall_;

    public AFuncallStatementStatement()
    {
    }

    public AFuncallStatementStatement(
        PCallfuncall _callfuncall_)
    {
        setCallfuncall(_callfuncall_);

    }
    public Object clone()
    {
        return new AFuncallStatementStatement(
            (PCallfuncall) cloneNode(_callfuncall_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFuncallStatementStatement(this);
    }

    public PCallfuncall getCallfuncall()
    {
        return _callfuncall_;
    }

    public void setCallfuncall(PCallfuncall node)
    {
        if(_callfuncall_ != null)
        {
            _callfuncall_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _callfuncall_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_callfuncall_);
    }

    void removeChild(Node child)
    {
        if(_callfuncall_ == child)
        {
            _callfuncall_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_callfuncall_ == oldChild)
        {
            setCallfuncall((PCallfuncall) newChild);
            return;
        }

    }
}
